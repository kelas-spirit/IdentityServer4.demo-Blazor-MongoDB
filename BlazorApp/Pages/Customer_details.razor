<h3>Customer details</h3>
@page "/customer-details/{Id}"
@inject BlazorApp.Data.ICustomerRazorService customerService
@inject Microsoft.AspNetCore.Components.NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="col-sm-3"></div>
<div class="col-sm-6">
    <div class="form-group">
        <label asp-for="CompanyName" class="control-label">Company Name</label>
        <input type="text" asp-for="CompanyName" class="form-control" @bind="@customer.CompanyName" required />
    </div>
    <div class="form-group">
        <label asp-for="ContactName" class="control-label">Contract Name</label>
        <input type="text" asp-for="ContactName" class="form-control" @bind="@customer.ContactName" />
    </div>
    <div class="form-group">
        <label asp-for="Address" class="control-label">Address</label>
        <input type="text" asp-for="Address" class="form-control" @bind="@customer.Address" />
    </div>
    <div class="form-group">
        <label asp-for="City" class="control-label">City</label>
        <input type="text" asp-for="City" class="form-control" @bind="@customer.City" />
    </div>
    <div class="form-group">
        <label asp-for="Region" class="control-label">Region</label>
        <input type="text" asp-for="Region" class="form-control" @bind="@customer.Region" />
    </div>
    <div class="form-group">
        <label asp-for="PostalCode" class="control-label">PostalCode</label>
        <input type="text" asp-for="PostalCode" class="form-control" @bind="@customer.PostalCode" />
    </div>
    <div class="form-group">
        <label asp-for="Country" class="control-label">Country</label>
        <input type="text" asp-for="Country" class="form-control" @bind="@customer.Country" />
    </div>
    <div class="form-group">
        <label asp-for="Phone" class="control-label">Phone</label>
        <input type="text" asp-for="Phone" class="form-control" @bind="@customer.Phone" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="@(async () => await CreateItem())">Save</button>
        <button class="btn btn-warning" @onclick="@cancel">Cancel</button>
    </div>
</div>
<div class="col-sm-3"></div>


@code {
    [Parameter]
    public string Id { get; set; }
    public string token { get; set; }
    public Models.Customer customer = new Models.Customer();

    public void CheckToken(int status)
    {
        if(status == (int)System.Net.HttpStatusCode.Unauthorized)
        {
            Navigation.NavigateTo("/login");
        }
    }
    protected override async Task OnInitializedAsync()
    {
        token = await localStorage.GetItemAsync<string>("apiToken");
        if (!string.IsNullOrEmpty(Id) && Id != "0")
        {
            var data = await customerService.GetCustomerAsync(Id, token);
            CheckToken(data.StatusCode);
            customer = data.Customer;
        }
    }
    protected async Task CreateItem()
    {
        if (!string.IsNullOrEmpty(Id) && Id != "0")
        {
            var result = await customerService.UpdateAsync(customer, Id, token);
            if (result == (int)System.Net.HttpStatusCode.Unauthorized)
            {
                Navigation.NavigateTo("/login");
            }
            Navigation.NavigateTo("/customers");
        }
        else
        {
            var result = await customerService.CreateAsync(customer, token);
            if (result == (int)System.Net.HttpStatusCode.Unauthorized)
            {
                Navigation.NavigateTo("/login");
            }
            Navigation.NavigateTo("/customers");
        }
    }
    void cancel()
    {
        Navigation.NavigateTo("/customers");
    }
}
